<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello Hexo：二回熟]]></title>
    <url>%2Fpublic%2Farticles%2F6b68fde8.html</url>
    <content type="text"><![CDATA[“我买几个橘子去。你就在此地，不要走动。” — 朱自清《背影》 〇. Header&emsp;&emsp;父亲节，约二十世纪初起源于美国，每年6月的第三个星期日。我买几个橘子去。你就往下看，不要走动（会不会挨打🤣）。&emsp;&emsp;通过上一篇文章，我相信你已经熟悉了Hexo的基本用法，但是似乎这还不够，主题、导航、网站图标、背景、文章结束语、阅读数等等这些常用且刚(装)需(哔——)的小东西还未添加进去，那么现在，我们就开始Hexo定制化的过程。 一. Body0. 更换主题&emsp;&emsp;默认的事物不是不好，但它更适合rookie。&emsp;&emsp;Hexo为我们提供了大量的主题，有兴趣的可以根据喜好进行更换。在这我推荐的主题是NexT，一款 精于心，简于形 的主题。NexT使用的人数非常多，我搜索到用Hexo框架的博主，大约90%都是这个主题，不仅因为美观，同时NexT也有很强大的第三方插件扩展的能力，非常方便。 下载NexT12$ cd Cheero // Cheero替换为你的站点根目录$ git clone https://github.com/theme-next/hexo-theme-next themes/next &emsp;&emsp;有的博主（包括官网）写的下载地址可能会是https://github.com/iissnan/hexo-theme-next/ ，但是使用这个版本部署的时候会提示有新版本，我这强迫症可受不了这个。&emsp;&emsp;下载完成之后我们进入next目录，里面也有一个_config.xml文件，这个是主题配置文件（区别于根目录的 站点配置文件 ），我们可以在这配置NexT主题样式、代码块样式、导航栏、字体、第三方插件（评论、打赏等）等。 使用NexT打开 站点 配置文件_config.yml，找到theme关键字，将其改为next：1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next NexT风格NexT提供了四种可选择的主题风格，打开 主题 配置文件_config.yml，找到scheme关键字，选择你喜欢的风格即可：1234scheme: Mist# scheme: Muse# scheme: Pisces# scheme: Gemini 修改完毕之后重新生成部署，就会看到新的站点，复习一下：123$ hexo clean$ hexo g $ hexo s 1. 设置语言在上一篇文章里，我们已经将站点配置文件的language设置为zh-CN，但是现在我们配置的是NexT主题的language，打开主题配置文件（themes/next/_config.yml）：1language: zh-Hans 我们可以看到这个设置的value是 zh-Hans 而不是 zh-CN 。这是因为主题的语言我们需要根据theme/next/languages里包含的yml文件名称来进行替换，否则无效。现在我们打开zh-CN.yml文件，就会看到每个字段代表的中文汉字。 2. 导航菜单 在NexT中，导航菜单是可以通过配置来进行显示和使用。 添加导航菜单打开主题配置文件，找到 menu: 字段：我们将 menu_setting: icons: 设置为true，这样就会显示导航图标。你也可以根据需要打开对应的导航菜单项，每一项的格式说明如下：12# 菜单名称: link目录 || icon图标 archives: /archives/ || archive NexT使用的是Font Awesome 提供的图标，它提供了600多种图标，可以满足绝大的多数的场景，同时无须担心在Retina屏幕下图标模糊的问题。 创建导航菜单目录经过上面的配置，我们部署后就可以看到导航菜单发生了一些变化：但是当我们点击其中一项的时候，发现会提示Cannot GET /xxx/，这是因为虽然我们显示出来了这一项，但实际上链接中并没有找到对应的页面，所以我们需要创建一个，我们回到站点根目录，在终端里输入：123$ hexo new page 'tags' # 创建 标签 子目录$ hexo new page 'categories' # 创建 分类 子目录$ hexo new page 'about' # 创建 关于 子目录 这样在根目录的source子目录下就会多出了tags、categories和about文件夹，并且每个文件夹里都包含一个index.md文件，修改这些文件，在头部新增type属性，并依次将值设置为tags categories about123456---layout: pagetitle: 分类date: 2018-06-14 18:25:19type: categories--- 成功后，当你每新建一篇博文的时候，增加上tags和categories属性，就能在tags和categories界面显示文章了。 3. 头像设置打开NexT主题配置文件，搜索# Sidebar Avatar：12345678910111213avatar: # 头像地址，对应的是themes/next/source/images # 将你的头像图片放到images目录下，将url指向头像图片 url: /images/cheero_logo.jpg # 是否以圆形头像显示 rounded: false # 透明度 opacity ∈ [0, 1] opacity: 1 # 鼠标特效：放在头像上旋转 rotated: false 4. 页面浏览进度打开NexT主题配置文件，搜索scrollpercent，将其置为true：1scrollpercent: true 5. 添加GitHub CornersGitHub Corners可以在网站的某个角添加一个github图标，你可以选择你喜欢的样式代码，将其复制到themes/next/layout/_layout.swig，添加到&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下面，并将href内的链接指向你自己的github地址： 6. 文章添加阴影打开\themes\next\source\css_custom\custom.styl，向里面加入：1234567.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 7. 动态背景NexT主题提供了4中样式的动态背景，你可以根据喜好将其中一项置为true即可：1234canvas_nest: truethree_waves: falsecanvas_lines: falsecanvas_sphere: false 8. 文章底部标签文章添加标签后，默认会在最底部生成标签链接 # Hexo，如果我们想去掉前面的#，需要修改模板themes/next/layout/_macro/post.swig，搜索 rel=&quot;tag&quot;&gt;#，将#换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 9. 文章结束标记在路径 themes/next/layout/_macro 中新建 passage-end-tag.swig 文件，并添加：123456&lt;div&gt; &#123;% if not is_index %&#125; &lt;/br&gt; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;------------- The End -------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 然后打开themes/next/layout/_macro/post.swig文件，在post-body之后添加：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 10. 顶部加载条顶部加载条我们需要依赖theme-next-pace，现将依赖包下载到我们的目录：12$ cd themes/next$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace 打开主题配置文件，搜索pace，将其置为true，同时也可以更换主题：1234567891011121314151617181920# Progress bar in the top during page loading.# Dependencies: https://github.com/theme-next/theme-next-pacepace: true# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-minimal 11. 本地搜索本地搜索功能需要添加 searchdb 依赖库，进入到你的站点根目录下：1$ npm install hexo-generator-searchdb --save 打开 站点配置文件，在末尾添加：12345search: path: search.xml field: post format: html limit: 10000 打开 主题配置文件 ,搜索关键字 local_search ,设置为 true：123456789local_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 # unescape html strings to the readable one unescape: false 有的时候可能配置完成后，点击搜索按钮并不会弹出搜索界面，而是有一个Loading的图标一直在转，这个原因可能是因为你的文章中包含一些特殊字符导致搜索插件加载错误，虽然在你原本编辑的文件中并没有发现，但确实存在。我用的是vscode来编写的markdown博文(UTF-8编码)，将文章复制粘贴到Sublime Text中，会发现很多奇怪的东西：将其删除，然后再copy到源文件中保存即可。 二. Footer文章到此简单的介绍了下NexT主题的个性化配置，后续我会继续零散的再补充其他的个性化配置。下一篇我会说明如何通过Github+个人域名来进行部署。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello Hexo：一回生]]></title>
    <url>%2Fpublic%2Farticles%2F9619e032.html</url>
    <content type="text"><![CDATA[今天高考，请加油，不行就复读 〇. 前（fei）言（hua）&emsp;&emsp;北京工作第四个年头，发现身边的各路大神都会选择写博客来记录和分享经验，甚至面试时都会问你有没有博客或者Github。创建博客的方式和网站有很多，像CSDN、简书、WordPress、Github等。本人对于技术有很严重的强迫症，所以选了又选，最终决定使用【Hexo + Github + 域名】来搭建自己的个人博客。&emsp;&emsp;后续我会不断完善博客的各种小功能，也会趁热打铁的同步更新博客。现在，本文将先对Hexo做一个基本的介绍。 一. 什么是Hexo&emsp;&emsp;Hexo是一个基于Node.js的静态站点生成框架，它快速、简洁且高效。通过Hexo你可以轻松地使用Markdown来编写文章，并且除了Markdown本身的语法之外，还可以使用Hexo本身的 标签插件 来快速的插入特定形式的内容（如本地图片，以后会介绍通过Markdown语法和Hexo标签两种方式实现）。 二. 开始安装（以Mac为例）0. Command Line Tools1$ xcode-select --install 1. git安装git有很多种方式，你可以去官网下载；也可以直接执行下面的语句，如果你已经配好了Homebrew：1$ brew install git 安装完成后执行git version，如果有显示版本号则表示安装完成。12$ git versiongit version 2.15.1 (Apple Git-101) 2. Node.js官网下载，根据提示进行安装，完成后会包含npm，在terminal中执行：1234$ node -vv8.11.2$ npm -v6.1.0 这样就代表Node.js安装成功 3. Hexo1$ npm install -g hexo-cli 待自动执行完成即可。 三. 实践：创建第一篇博客 通过上面的步骤，你应该已经初步了解了Hexo。现在，我们开始创建第一篇博客文章。 0. 初始化首先我们需要创建一个工程目录，Hexo为我们提供了方法：1234567// Cheero可以改成你自己的目录名称$ hexo init Cheero $ cd Cheero// 这句话会帮我们安装所用到的一些插件，但也有一些依赖包会根据需要手动安装$ npm install// 先安装此插件，后续我们将把代码上传至GitHub$ npm install hexo-deployer-git --save 至此，Hexo会帮我们自动生成所需要的模板文件，里面的目录各有所用（具体可参考文档），现在我们来关心一些基本的配置项。 1. 站点配置在Cheero（主目录）中有一个_config.xml文件，里面包括整个站点的配置信息，现在我们修改下 # Site 标签下的配置，以下是我的配置：1234// 网站标题，红色部分title: Cheero&apos;s Blog // 网站副标题，蓝色部分subtitle: 耀哥很忙 12345678910// 网站描述，用于SEO，告诉搜索引擎一个关于您站点的简单描述。但是在这个主题中未显示出来，后续会切换到其它Themedescription: A full-stack developer is coming.// 关键字，同样用于SEOkeywords: 技术, Android, Java, Hexo// 作者author: Cheero// 语言，中文是zh-CNlanguage: zh-CN// 时区，中国时区可用Asia/Shanghaitimezone: Asia/Shanghai 2. 本地部署现在我们想要在浏览器中来预览本地的博客，这个过程是[先生成] → [再发布]：123$ hexo generate ... ...$ hexo server 当然，上面的两句话还有简写的方式，hexo g &amp; hexo s，大家可以试一下，效果是一样的。当提示Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.就说明已经“部署”完成，打开浏览器，输入地址，我们可以看到Hexo已经为我们预先生成好了一篇文章，接下来我们新建一篇自己的博客。 3. 新建文章12// 格式：hexo new [layout] &lt;title&gt;$ hexo new "Hello Hexo" 如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。 如果标题包含空格的话，请使用引号括起来。 创建完成之后，我们重新执行hexo g和hexo s，输入地址就会看到我们刚刚创建的文章。 4. 清理缓存1$ hexo clean 这句话的作用是清除缓存文件 (db.json) 和已生成的静态文件 (public目录，执行hexo g后自动生成的)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。 四. 后记至此，利用Hexo搭建个人博客就已经初步完成，后续会再继续补充Hexo的其他功能配置，来一个进阶版！PS：写博客比写代码可费时费事多了！！😭😭😭]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
